LICENSE_CONSENT=true
LOG_PRETTY=true
#LOG_FILE=prxi-%DATE%.log

# TLS_FILE_KEY=test/key.pem
# TLS_STRING_STR_TEST=test
# TLS_NUMBER_NUMBER_TEST='1'

KC_TEST_USER=test
KC_TEST_USER_PASSWORD=test

PROXY_REQUEST_TIMEOUT=100
HOST_URL=http://localhost:3000
UPSTREAM_URL=http://localhost:7001
LOG_LEVEL=debug

REDIRECT_PAGE_REQUEST_ON_404=http://localhost:7001/e404
REDIRECT_PAGE_REQUEST_ON_403=http://localhost:7001/e403

OPENID_CONNECT_DISCOVER_URL=http://localhost:8080/realms/test/.well-known/openid-configuration

OPENID_CLIENT_ID=test_client
OPENID_CLIENT_SECRET='1f88bd14-7e7f-45e7-be27-d680da6e48d8'

MAPPINGS_PUBLIC='[
  {
    "pattern": "/public/.*"
  },
  {
    "pattern": "/favicon.ico"
  }
]'

MAPPINGS_WS='[
  {
    "pattern": "/.*"
  }
]'

MAPPINGS_API='[
  {
    "pattern": "^/api/.*$",
    "methods": ["GET", "POST", "PUT", "DELETE"],
    "auth": {
      "claims": {
        "realm": [ "test_role" ]
      }
    },
    "exclude": [
      {
        "pattern": "/api/exclude/.*",
        "methods": ["GET", "POST", "PUT", "DELETE"]
      }
    ]
  },
  {
    "pattern": "/api-optional/.*"
  },
  {
    "pattern": "/forbidden-api/.*",
    "auth": {
      "claims": {
        "realm": [ "rejected" ]
      }
    }
  }
]'

MAPPINGS_PAGES='[
  {
    "pattern": "/",
    "auth": {
      "claims": {
        "realm": [ "test_role" ]
      }
    }
  },
  {
    "pattern": "/pages/.*",
    "auth": {
      "claims": {
        "realm": [ "test_role" ]
      }
    }
  },
  {
    "pattern": "/forbidden-pages/.*",
    "auth": {
      "claims": {
        "realm": [ "rejected" ]
      }
    }
  }
]'

JWT_AUTH_CLAIM_PATHS='{
  "realm": ["realm_access", "roles"],
  "account": ["resource_access", "account", "roles"]
}'

JWT_PROXY_CLAIM_PATHS='{
  "username": ["preferred_username"],
  "realmRoles": ["realm_access", "roles"]
}'
HEADERS_CLAIMS_PROXY=prxi-user-claims

JWT_META_TOKEN_SECRET=abc
HEADERS_META=x-prxi-meta

WHOAMI_API_PATH=/_prxi/whoami
PERMISSIONS_API_PATH=/_prxi/permissions

# For AWS Cognito:
# OPENID_CONNECT_DISCOVER_URL=https://cognito-idp.{region}.amazonaws.com/{userPoolId}/.well-known/openid-configuration
# MAPPINGS_PAGES='[{"pattern": ".*", "claims": {"cognito": ["Test Group"]}}]'
# JWT_AUTH_CLAIM_PATHS='{"cognito": ["cognito:groups"]}'
